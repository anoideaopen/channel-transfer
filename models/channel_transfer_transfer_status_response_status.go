// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ChannelTransferTransferStatusResponseStatus channel transfer transfer status response status
//
// swagger:model channel_transferTransferStatusResponseStatus
type ChannelTransferTransferStatusResponseStatus string

func NewChannelTransferTransferStatusResponseStatus(value ChannelTransferTransferStatusResponseStatus) *ChannelTransferTransferStatusResponseStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ChannelTransferTransferStatusResponseStatus.
func (m ChannelTransferTransferStatusResponseStatus) Pointer() *ChannelTransferTransferStatusResponseStatus {
	return &m
}

const (

	// ChannelTransferTransferStatusResponseStatusSTATUSINPROCESS captures enum value "STATUS_IN_PROCESS"
	ChannelTransferTransferStatusResponseStatusSTATUSINPROCESS ChannelTransferTransferStatusResponseStatus = "STATUS_IN_PROCESS"

	// ChannelTransferTransferStatusResponseStatusSTATUSUNDEFINED captures enum value "STATUS_UNDEFINED"
	ChannelTransferTransferStatusResponseStatusSTATUSUNDEFINED ChannelTransferTransferStatusResponseStatus = "STATUS_UNDEFINED"

	// ChannelTransferTransferStatusResponseStatusSTATUSCOMPLETED captures enum value "STATUS_COMPLETED"
	ChannelTransferTransferStatusResponseStatusSTATUSCOMPLETED ChannelTransferTransferStatusResponseStatus = "STATUS_COMPLETED"

	// ChannelTransferTransferStatusResponseStatusSTATUSCANCELED captures enum value "STATUS_CANCELED"
	ChannelTransferTransferStatusResponseStatusSTATUSCANCELED ChannelTransferTransferStatusResponseStatus = "STATUS_CANCELED"

	// ChannelTransferTransferStatusResponseStatusSTATUSERROR captures enum value "STATUS_ERROR"
	ChannelTransferTransferStatusResponseStatusSTATUSERROR ChannelTransferTransferStatusResponseStatus = "STATUS_ERROR"
)

// for schema
var channelTransferTransferStatusResponseStatusEnum []interface{}

func init() {
	var res []ChannelTransferTransferStatusResponseStatus
	if err := json.Unmarshal([]byte(`["STATUS_IN_PROCESS","STATUS_UNDEFINED","STATUS_COMPLETED","STATUS_CANCELED","STATUS_ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		channelTransferTransferStatusResponseStatusEnum = append(channelTransferTransferStatusResponseStatusEnum, v)
	}
}

func (m ChannelTransferTransferStatusResponseStatus) validateChannelTransferTransferStatusResponseStatusEnum(path, location string, value ChannelTransferTransferStatusResponseStatus) error {
	if err := validate.EnumCase(path, location, value, channelTransferTransferStatusResponseStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this channel transfer transfer status response status
func (m ChannelTransferTransferStatusResponseStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateChannelTransferTransferStatusResponseStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this channel transfer transfer status response status based on context it is used
func (m ChannelTransferTransferStatusResponseStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
